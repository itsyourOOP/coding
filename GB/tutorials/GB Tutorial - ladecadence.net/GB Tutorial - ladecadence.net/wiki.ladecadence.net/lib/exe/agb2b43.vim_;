" Vim syntax file
" Language:	RGBDS GameBoy assembler
" Maintainer:	David Pello <zako@ladecadence.net>
" Last Change:	2010 Jun 13

" For version 5.x: Clear all syntax items
" For version 6.x: Quit when a syntax file was already loaded
if version < 600
  syntax clear
elseif exists("b:current_syntax")
  finish
endif

syn case ignore

" Common Z80 Assembly instructions
syn keyword agbInstruction adc add and bit ccf cp cpd cpdr cpi cpir cpl
syn keyword agbInstruction daa di djnz ei exx halt im in
syn keyword agbInstruction ind ini indr inir jp jr ld ldd lddr ldi ldir
syn keyword agbInstruction neg nop or otdr otir out outd outi
syn keyword agbInstruction res rl rla rlc rlca rld
syn keyword agbInstruction rr rra rrc rrca rrd sbc scf set sla sra
syn keyword agbInstruction srl sub xor
" syn keyword agbInstruction push pop call ret reti retn inc dec ex rst

" Any other stuff
syn match agbIdentifier		"[a-z_][a-z0-9_]*"

" Instructions changing stack
syn keyword agbSpecInst push pop call ret reti retn rst
syn match agbInstruction "\<inc\>"
syn match agbInstruction "\<dec\>"
syn match agbInstruction "\<ex\>"
syn match agbSpecInst "\<inc\s\+sp\>"me=s+3
syn match agbSpecInst "\<dec\s\+sp\>"me=s+3
syn match agbSpecInst "\<ex\s\+(\s*sp\s*)\s*,\s*hl\>"me=s+2

" Registers
syn keyword agbRegister	af bc de hl sp pc
syn keyword agbRegister a f b c d e h l 

" Flags
syn keyword agbFlag nz z nc c

"Labels
syn match agbLabel		"[a-z_][a-z0-9_]*:"
syn match agbSpecialLabel	"[a-z_][a-z0-9_]*::"

" PreProcessor commands
syn match agbPreProc	"\.byte"
syn match agbPreProc	"\.word"
syn match agbPreProc	"\.blkb"
syn match agbPreProc	"\.blkw"
syn match agbPreProc	"\.ascii"
syn match agbPreProc	"\.asciz"
syn match agbPreProc	"\.module"
syn match agbPreProc	"\.title"
syn match agbPreProc	"\.sbttl"
syn match agbPreProc	"\.even"
syn match agbPreProc	"\.odd"
syn match agbPreProc	"\.area"
syn match agbPreProc	"\.page"
syn match agbPreProc	"\.setdp"

syn match agbInclude	"\org"
syn match agbInclude	"\globl"
syn match agbInclude	"\db"
syn match agbInclude	"\dw"
syn match agbInclude	"\ds"
syn match agbInclude    "\equ"
syn match agbInclude    "\section"
syn match agbInclude    "\macro"
syn match agbInclude    "\endm"
syn match agbInclude    "\set"
syn match agbInclude	"\include"
syn match agbInclude	"\if"
syn match agbInclude	"\def"
syn match agbInclude	"\endc"


" Common strings
syn match agbString		"\".*\""
syn match agbString		"\'.*\'"

" Numbers
syn match agbNumber		"[0-9]\+"
syn match agbNumber		"0[xXhH][0-9a-fA-F]\+"
syn match agbNumber		"0[bB][0-1]*"
syn match agbNumber		"0[oO\@qQ][0-7]\+"
syn match agbNumber		"0[dD][0-9]\+"

" Character constant
syn match agbString		"\#\'."hs=s+1

" Comments
syn match agbComment		";.*"

syn case match

" Define the default highlighting.
" For version 5.7 and earlier: only when not done already
" For version 5.8 and later: only when an item doesn't have highlighting yet
if version >= 508 || !exists("did_agb_syntax_inits")
  if version < 508
    let did_agb_syntax_inits = 1
    command -nargs=+ HiLink hi link <args>
  else
    command -nargs=+ HiLink hi def link <args>
  endif

  HiLink agbSection			Special
  HiLink agbLabel			Label
  HiLink agbSpecialLabel	Label
  HiLink agbComment			Comment
  HiLink agbInstruction		Statement
  HiLink agbSpecInst		Statement
  HiLink agbInclude			Include
  HiLink agbPreCondit		PreCondit
  HiLink agbPreProc			PreProc
  HiLink agbNumber			Number
  HiLink agbString			String
  HiLink agbRegister		Type
  HiLink agbFlag			Statement

  delcommand HiLink
endif

let b:current_syntax = "agb"
" vim: ts=8
