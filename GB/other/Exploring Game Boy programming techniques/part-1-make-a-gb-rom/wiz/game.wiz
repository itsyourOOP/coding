let K = 1024
bank rom: rom * 32*K
bank ram: ram * 4*K
bank ram2: ram * 4*K
bank hram: ram * 127

// RST handlers.
in rom, 0x0000:
    return
in rom, 0x0008:
    return
in rom, 0x0010:
    return
in rom, 0x0018:
    return
in rom, 0x0020:
    return
in rom, 0x0028:
    return
in rom, 0x0030:
    return
in rom, 0x0038:
    return
// Interrupt handlers.
in rom, 0x0040:
    goto! draw
in rom, 0x0048:
    goto! stat
in rom, 0x0050:
    goto! timer
in rom, 0x0058:
    goto! serial
in rom, 0x0060:
    goto! joypad
// Startup handler.
in rom, 0x0100:
    nop
    goto! main
// The Nintendo Logo.
in rom, 0x0104:
    byte * 48:
        0xCE, 0xED, 0x66, 0x66, 0xCC, 0x0D, 0x00, 0x0B,
        0x03, 0x73, 0x00, 0x83, 0x00, 0x0C, 0x00, 0x0D,
        0x00, 0x08, 0x11, 0x1F, 0x88, 0x89, 0x00, 0x0E,
        0xDC, 0xCC, 0x6E, 0xE6, 0xDD, 0xDD, 0xD9, 0x99,
        0xBB, 0xBB, 0x67, 0x63, 0x6E, 0x0E, 0xEC, 0xCC,
        0xDD, 0xDC, 0x99, 0x9F, 0xBB, 0xB9, 0x33, 0x3E
// The title, in upper-case letters, followed by zeroes.
in rom, 0x0134:
    byte * 11: "TEST", 0
// The manufacturer code.    
in rom, 0x013F:
    byte * 4: 0
// Gameboy Color compatibility flag.    
in rom, 0x0143:
    let GBC_UNSUPPORTED = 0x00
    let GBC_COMPATIBLE = 0x80
    let GBC_EXCLUSIVE = 0xC0
    byte * 1: GBC_UNSUPPORTED
// "New" Licensee Code, a two character name.    
in rom, 0x0144:
    byte * 2: "OK"
// Super Gameboy compatibility flag.
in rom, 0x0146:
    let SGB_UNSUPPORTED = 0x00
    let SGB_SUPPORTED = 0x03
    byte * 1: SGB_UNSUPPORTED
// Cartridge type. Either no ROM or MBC5 is recommended.
in rom, 0x0147:
    let CART_ROM_ONLY = 0x00
    let CART_MBC1 = 0x01
    let CART_MBC1_RAM = 0x02
    let CART_MBC1_RAM_BATTERY = 0x03
    let CART_MBC2 = 0x05
    let CART_MBC2_BATTERY = 0x06
    let CART_ROM_RAM = 0x08
    let CART_ROM_RAM_BATTERY = 0x09
    let CART_MMM01 = 0x0B
    let CART_MMM01_RAM = 0x0C
    let CART_MMM01_RAM_BATTERY = 0x0D
    let CART_MBC3_TIMER_BATTERY = 0x0F
    let CART_MBC3_TIMER_RAM_BATTERY = 0x10
    let CART_MBC3 = 0x11
    let CART_MBC3_RAM = 0x12
    let CART_MBC3_RAM_BATTERY = 0x13
    let CART_MBC4 = 0x15
    let CART_MBC4_RAM = 0x16
    let CART_MBC4_RAM_BATTERY = 0x17
    let CART_MBC5 = 0x19
    let CART_MBC5_RAM = 0x1A
    let CART_MBC5_RAM_BATTERY = 0x1B
    let CART_MBC5_RUMBLE = 0x1C
    let CART_MBC5_RUMBLE_RAM = 0x1D
    let CART_MBC5_RUMBLE_RAM_BATTERY = 0x1E
    let CART_POCKET_CAMERA = 0xFC
    let CART_BANDAI_TAMA5 = 0xFD
    let CART_HUC3 = 0xFE
    let CART_HUC1_RAM_BATTERY = 0xFF
    byte * 1: CART_ROM_ONLY
// Rom size.
in rom, 0x0148:
    let ROM_32K = 0x00
    let ROM_64K = 0x01
    let ROM_128K = 0x02
    let ROM_256K = 0x03
    let ROM_512K = 0x04
    let ROM_1024K = 0x05
    let ROM_2048K = 0x06
    let ROM_4096K = 0x07
    let ROM_1152K = 0x52
    let ROM_1280K = 0x53
    let ROM_1536K = 0x54
    byte * 1: ROM_32K
// Ram sizes.
in rom, 0x0149:
    let RAM_NONE = 0x00
    let RAM_2K = 0x01
    let RAM_8K = 0x02
    let RAM_32K = 0x03
    byte * 1: RAM_NONE
// Destination code.
in rom, 0x014A:
    let DEST_JAPAN = 0x00
    let DEST_INTERNATIONAL = 0x01
    byte * 1: DEST_INTERNATIONAL
// Old licensee code.
// 0x33 indicates new license code will be used.
// 0x33 must be used for SGB games.
in rom, 0x014B: byte * 1: 0x33
// ROM version number
in rom, 0x014C: byte * 1: 0x00
// Header checksum.
// Assembler needs to patch this.
in rom, 0x014D: byte * 1: 0xFF
// Global checksum.
// Assembler needs to patch this.
in rom, 0x014E: word * 1: 0xFACE

in rom, 0x0150:
    func main do
        loop
            sleep
        end
    end

    task nothing do
    end

    let draw = nothing
    let stat = nothing
    let timer = nothing
    let serial = nothing
    let joypad = nothing






