section "Code", rom0
Setup:;                    ┌──┬LY
DisableLCD:     ld    hl, $ff44;┌┬Line 144, V-Blank starts
                ld    a,       $90
.ltLY144:       cp    [hl]
                jr    C, @+2
                jr    NZ, .ltLY144
;                          ┌──┬LCD Control
                ld    hl, $ff40;┌LCD Display enabled?
                res             7, [hl]
                set             6, [hl];Window Map @ $9c00

;                          ┌──┬Prepare Speed Switch, CGB Mode Only
SwitchSpeed:    ld    hl, $ff4d;┌Prepare Speed Switch?
                set             0, [hl]
                stop

Upload:         include "big-endian.inc"
                ld    a, 1
                ld    hl, $ff55
.mapTiles:      ldbe  bc, MapTiles
                ldbe  de, $8000
                ld    sp, hl
                push  de
                push  bc
                ld    [hl], (MapTilesEnd-MapTiles)/$10-$01
.map:           ldbe  bc, Map
                ldbe  de, $9800
                ld    sp, hl
                push  de
                push  bc
                ld    [hl], (MapEnd-Map)/$10-$01
.windowMap:     ldbe  bc, WindowMap
                ldbe  de, $9c00
                ld    sp, hl
                push  de
                push  bc
                ld    [hl], (WindowMapEnd-WindowMap)/$10-$01
.mapAttributes: ldbe  bc, MapAttributes
                ldbe  de, $9800
                ld    sp, hl
                push  de
                push  bc
                ld    [$ff4f], a;bank 1
                ld    [hl], (MapAttributesEnd-MapAttributes)/$10-$01
.windowAttributes:
                ldbe  bc, WindowAttributes
                ldbe  de, $9c00
                ld    sp, hl
                push  de
                push  bc
                ld    [hl], (WindowAttributesEnd-WindowAttributes)/$10-$01
                xor   1
                ld    [$ff4f], a;bank 0
.mapPalette:    ld    l, $68
                ld    [hl], %10000000
                inc   l
                ld    sp, MapPalette
                rept  $04
                pop   bc
                ld    [hl], c
                ld    [hl], b
                endr
                
.windowPalette: ld    l, $68
                ld    [hl], %10001000
                inc   l
                ld    sp, WindowPalette
                rept  $03
                pop   bc
                ld    [hl], c
                ld    [hl], b
                endr
                
                ld    sp, $fffc;Ready stack pointer for return

EnableLCD:      ld    l, $40
                set   7, [hl]

EnableInterrupts:
                ld    l, $ff
                set   0, [hl];V-Blank

InitializeSine: ld    hl, Sine
                ld    [hl], $00
                inc   hl
                ld    [hl], $40
                
InitializeRain: ld    hl, RainTile
                ld    [hl], $00
                ld    hl, Delay
                ld    [hl], $00
;The first V-Blank interrupt has different behaviour, so skip it:
SkipVBlank:     ld    l, $44
                ld    a, $8f
.ltLY144:       rept  $29
                cp    [hl]
                jr    C, .return
                endr
                cp    [hl]
                jr    NC, .ltLY144
.return:        reti



VBlank:
.scroll         ;ld    hl, Delay
                ;ld    a, [hl]
                ;inc   [hl]
                ;cp    $01
                ;jr    NZ, .toggleWindow
                ;xor   a
                ;ld    [hl], a
                ld    hl, Sine
                ld    b, [hl]
                inc   [hl]
                inc   hl
                ld    c, [hl]
                inc   [hl]
                ld    hl, Sines
                ld    a, b
                add   l
                ld    l, a
                ld    a, $40
                add   [hl]
                ld    b, a
                ld    hl, Sines
                ld    a, c
                add   l
                ld    l, a
                ld    a, $30
                add   [hl]
                ld    c, a
                ld    hl, $ff42
                ld    [hl], b
                ld    hl, $ff43
                ld    [hl], c
                jr    .toggleWindow
.toggleWindow:  ld    hl, $ff40
                ld    a, %00100000
                xor   [hl]
                ld    [hl], a
                bit   5, a
                jr    Z, .return
.updateRain:    ld    hl, RainTile
                ld    a, %00000111
                and   [hl]
                inc   [hl]
                rla
                rla
                rla
                rla
                ld    b, $00
                ld    c, a
                ld    hl, WindowTiles
                add   hl, bc
                ld    bc, $8400
                rept  $10
                ld    a, [hl+]
                ld    [bc], a
                inc   bc
                endr
.return         reti





section "HRAM", hram
Sine:           ds    1
Cosine:         ds    1
RainTile:       ds    1
Delay:          ds    1





section "V-Blank interrupt vector", rom0[$0040]
                jp    VBlank





section "Data", romx, bank[1]
angle           set   0.0
Sines:          rept  $100
                db    (mul(16.0, sin(angle))+16.0)>>16
angle           set   angle+256.0
                endr

MapTiles:       incbin  "pallet-town.2bpp"
MapTilesEnd:
Map:            incbin  "pallet-town.tilemap"
MapEnd:
MapAttributes:  rept  MapEnd-Map
                db    $00
                endr
MapAttributesEnd:
WindowTiles:    incbin  "weather.2bpp"
WindowTilesEnd:
WindowMap:      rept  MapEnd-Map
                db    $40
                endr
WindowMapEnd:      
WindowAttributes:
flip            set   0
                rept  WindowMapEnd-WindowMap
                db    $01 + (((flip % 3) * 16) & %00100000)
flip            set   flip + 1
                endr
WindowAttributesEnd:
WindowPalette:  incbin  "weather.pal"
WindowPaletteEnd:
MapPalette:     incbin  "pallet-town.pal"
MapPaletteEnd:





section "Header", rom0[$0100]
                di
                jp    Main
                ds    75





section "Main", rom0[$0150]
Main:           call  Setup
.wait:          halt
                nop
                jr    .wait
